name: Release
on:
  workflow_dispatch:
  workflow_call:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          # Linux (GNU)
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: riscv64gc-unknown-linux-gnu
            os: ubuntu-latest
          - target: powerpc64le-unknown-linux-gnu
            os: ubuntu-latest

          # Linux (musl)
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
          - target: riscv64gc-unknown-linux-musl
            os: ubuntu-latest

          # Linux (uClibc)
          - target: armv7-unknown-linux-uclibceabi
            os: ubuntu-latest
          - target: mipsel-unknown-linux-uclibc
            os: ubuntu-latest

          # Android
          - target: aarch64-linux-android
            os: ubuntu-latest
          - target: arm-linux-androideabi
            os: ubuntu-latest
          - target: x86_64-linux-android
            os: ubuntu-latest

          # FreeBSD
          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
          - target: i686-unknown-freebsd
            os: ubuntu-latest

          # NetBSD
          - target: x86_64-unknown-netbsd@10
            os: ubuntu-latest
          - target: aarch64-unknown-netbsd@10
            os: ubuntu-latest
          # WASI
          - target: wasm32-wasip1
            os: ubuntu-latest

          # illumos
          - target: x86_64-unknown-illumos
            os: ubuntu-latest

          # macOS
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64h-apple-darwin
            os: macos-latest
          - target: aarch64-apple-ios-macabi
            os: macos-latest
          - target: x86_64-apple-ios-macabi
            os: macos-latest

          # Windows (MSVC)
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest

          # Windows (MinGW)
          - target: x86_64-pc-windows-gnu
            os: windows-latest

          # Windows (LLVM MinGW)
          - target: x86_64-pc-windows-gnullvm
            os: ubuntu-latest
          - target: aarch64-pc-windows-gnullvm
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: rust-code-analysis-tui
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
